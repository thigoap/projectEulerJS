function fiboEvenSum(n) {
    let sum = 2;
    let fibo = [1, 2];
    let nextfibo = 0;
    let i = 2;
    while (nextfibo < n) {
        nextfibo = fibo[i - 1] + fibo[i - 2];
        fibo.push(nextfibo);
        i++;
        if (nextfibo % 2 == 0) {
          sum += nextfibo;
        }
    }
    console.log(sum);
    return sum;
}

fiboEvenSum(10)
fiboEvenSum(60)
fiboEvenSum(1000)
fiboEvenSum(100000)
fiboEvenSum(4000000)

/*
Project Euler: Problem 2: Even Fibonacci Numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed n, 
find the sum of the even-valued terms.
*/

/* tests */
/*
fiboEvenSum(10) should return a number.
fiboEvenSum(10) should return 10.
fiboEvenSum(60) should return 44.
fiboEvenSum(1000) should return 798.
fiboEvenSum(100000) should return 60696.
fiboEvenSum(4000000) should return 4613732.
Your function should return an even value.
*/